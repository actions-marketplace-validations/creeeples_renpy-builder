name: "Ren'Py Builder"
author: 'Jason || Creeeples'
description: "A simple build action for Ren'Py projects using Docker"
branding:
  color: 'gray-dark'
  icon: 'archive'
on:
  push:
    branches:
      - 'release/*'
inputs:
  sdk-version:
    description: "The version of the Ren'Py SDK to use"
    required: true
    default: '8.1.1'
  project-dir:
    description: "The path to the directory where the project exists"
    required: true
    default: '.'
  package:
    description: "Specific package to build for"
    required: false
    type: choice
    options:
      - pc
      - mac
      - linux
      - market
      - web
      - android
outputs:
  out_dir:
    description: "The output directory for build files typically generated by Ren'Py Engine Builder."
  version:
    description: "The specified code version of the Ren'Py project defined in the project's options.rpy file."
runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.sdk-version }}
    - ${{ inputs.project-dir }}
    - ${{ inputs.package }}
jobs:
  build-renpy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Extract version from branch name
      id: extract_version
      run: |
          echo "old GITHUB_REF is $GITHUB_REF"
          GITHUB_REF=$(echo $GITHUB_REF | sed -e "s#refs/heads/release/##g")
          echo "::set-output name=ref::$GITHUB_REF"
      env:
        GITHUB_REF: ${{ github.ref }}

    - name: Format release name
      id: format_release_name
      run: |
        echo "::set-output name=release_name::Release-${{ steps.extract_version.outputs.ref }}"
      env:
        VERSION: ${{ steps.extract_version.outputs.ref }}
        
    - name: Format tag name
      id: format_tag_name
      run: |
        echo "::set-output name=tag_name::v${{ steps.extract_version.outputs.ref }}"
      env:
        VERSION: ${{ steps.extract_version.outputs.ref }}
        
    - name: Build VN project
      id: build_project
      runs:
        using: 'docker'
        image: 'Dockerfile'
        args:
          - ${{ inputs.sdk-version }}
          - ${{ inputs.project-dir }}
          - ${{ inputs.package }}
      with:
        sdk-version: inputs.sdk-version
        project-dir: inputs.project
      env:
        SDL_AUDIODRIVER: dummy
        SDL_VIDEODRIVER: dummy

    - name: Setup GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ github.token }}
        tag_name: ${{ steps.format_tag_name.outputs.tag_name }}
      env:
          GH_TOKEN: ${{ github.token }}

    - name: Upload each zip file
      run: |
        for file in ${{ steps.build_project.outputs.out_dir }}/*.zip; do
        echo "Uploading $file"
        asset_name=$(basename "$file")
        gh release upload ${{ steps.format_tag_name.outputs.tag_name }} "$file" --clobber
        done
      env:
          GH_TOKEN: ${{ github.token }}
